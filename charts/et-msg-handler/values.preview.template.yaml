java:
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  postgresql:
    enabled: true
  servicebus:
    enabled: true
    resourceGroup: ethos-servicebus-devs
    setup:
      queues:
        - name: create-updates
        - name: update-case
  secrets:
    CREATE_UPDATES_CONN_STRING:
      secretRef: servicebus-secret-queue-{{ .Release.Name }}-servicebus-create-updates
      key: connectionString
    UPDATE_CASE_CONN_STRING:
      secretRef: servicebus-secret-queue-{{ .Release.Name }}-servicebus-update-case
      key: connectionString
  keyVaults:
    et-msg-handler:
      secrets:
        - caseworker-user-name
        - caseworker-password
        - gov-notify-api-key
        - et-msg-handler-s2s-secret
        - idam-client-secret
  environment:
    ET_MSG_HANDLER_POSTGRES_HOST: "{{ .Release.Name }}-postgresql"
    ET_MSG_HANDLER_POSTGRES_DATABASE: "{{ .Values.postgresql.postgresqlDatabase}}"
    ET_MSG_HANDLER_POSTGRES_USER: "{{ .Values.postgresql.postgresqlUsername}}"
    ET_MSG_HANDLER_POSTGRES_PASSWORD: "{{ .Values.postgresql.postgresqlPassword}}"
    ET_MSG_HANDLER_DB_CONN_OPTIONS: ""
    CREATE_UPDATES_QUEUE_SEND_CONNECTION_STRING: "${CREATE_UPDATES_CONN_STRING}"
    CREATE_UPDATES_QUEUE_LISTEN_CONNECTION_STRING: "${CREATE_UPDATES_CONN_STRING}"
    UPDATE_CASE_QUEUE_SEND_CONNECTION_STRING: "${UPDATE_CASE_CONN_STRING}"
    UPDATE_CASE_QUEUE_LISTEN_CONNECTION_STRING: "${UPDATE_CASE_CONN_STRING}"
