# GENERAL SPRING BOOT ACTUATOR CONFIG
# Context path for Spring Boot Actuator endpoints
management.endpoints.web.base-path=/
management.endpoint.health.show-details=always
spring.application.name = et-msg-handler
feign.httpclient.enabled = true
server.port=8085

ccd.client.timeout=60000

azure.application-insights.instrumentation-key: ${APP_INSIGHTS_KEY:00000000-0000-0000-0000-000000000000}

spring.config.import: optional:configtree:/mnt/secrets/et-msg-handler/,optional:configtree:/mnt/secrets/et/

# DB
spring.datasource.url = jdbc:postgresql://${ET_MSG_HANDLER_POSTGRES_HOST:localhost}:${ET_MSG_HANDLER_POSTGRES_PORT:5432}/${ET_MSG_HANDLER_POSTGRES_DATABASE:et_msg_handler}${ET_MSG_HANDLER_DB_CONN_OPTIONS:}
spring.datasource.username = ${ET_MSG_HANDLER_POSTGRES_USER:postgres}
spring.datasource.password = ${ET_MSG_HANDLER_POSTGRES_PASSWORD:postgres}

etcos.spring.datasource.url = jdbc:postgresql://${ET_COS_DB_HOST:localhost}:${ET_COS_DB_PORT:5432}/${ET_COS_DB_NAME:et_cos}
etcos.spring.datasource.username = ${ET_COS_DB_USER_NAME:postgres}
etcos.spring.datasource.password = ${ET_COS_DB_PASSWORD:postgres}

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto = none
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# IDAM
idam.api.url = ${IDAM_API_URL:http://sidam-api:5000}
idam.api.url.jwkUrl = ${IDAM_API_JWK_URL:http://sidam-api:5000/jwks}
idam.api.url.oidc = ${IDAM_API_OIDC_URL:http://sidam-api:5000/o/token}

idam.s2s-auth.url = ${SERVICE_AUTH_PROVIDER_URL:http://service-auth-provider-api:8080}
idam.s2s-auth.totp_secret = ${ET_MSG_HANDLER_S2S_SECRET:AAAAAAAAAAAAAAAC}
idam.s2s-auth.microservice = et_msg_handler

idam.client.redirect_uri = ${IDAM_CLIENT_REDIRECT_URL:https://localhost:8085/oauth2redirect}
idam.client.id = et_msg_handler
idam.client.secret = ${IDAM_CLIENT_SECRET:secret}

ccd.data.store.api.url = ${CCD_DATA_STORE_API_URL:http://ccd-data-store-api:4452}
ccd_gateway_base_url = ${CCD_GATEWAY_BASE_URL:http://127.0.0.1:3453}

caseWorkerUserName = ${CASEWORKER_USER_NAME:user_name}
caseWorkerPassword = ${CASEWORKER_PASSWORD:password}

uk.gov.notify.api.key = ${GOV_NOTIFY_API_KEY: apiKeyIsStoredInTheVault}

# QUEUES
queue.create-updates.send.connection-string = ${CREATE_UPDATES_QUEUE_SEND_CONNECTION_STRING}
queue.create-updates.listen.connection-string = ${CREATE_UPDATES_QUEUE_LISTEN_CONNECTION_STRING}
queue.create-updates.queue-name = create-updates

queue.update-case.send.connection-string = ${UPDATE_CASE_QUEUE_SEND_CONNECTION_STRING}
queue.update-case.listen.connection-string = ${UPDATE_CASE_QUEUE_LISTEN_CONNECTION_STRING}
queue.update-case.queue-name = update-case

cron.pickupWorkTask = ${PICKUP_WORK_TASK:0/30 * * * * *}
